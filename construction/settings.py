"""
Django settings for construction project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$9sc68r@lg(it_115#t^(&389(qwu=m384nq+$f!jk3j71@k9y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

import os
from dotenv import load_dotenv

load_dotenv()

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "127.0.0.1,localhost").split(",")




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'constapp'
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'construction.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'construction.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

import os
import dj_database_url
from dotenv import load_dotenv

load_dotenv()  # Load environment variables from .env

DATABASES = {
    "default": dj_database_url.config(default=os.getenv("DATABASE_URL"))
}
#postgresql://loan_management_db_hf68_user:6CFbo1xM1l9jHgOJpGt5nB4Xsf7OBzKA@dpg-cv28r40gph6c73bdv23g-a.oregon-postgres.render.com/loan_management_db_hf68

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_BACKEND ='django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True            #TLS -Transport Layer Security
EMAIL_PORT = 587
EMAIL_HOST_USER = 'varshamaadhuas30@gmail.com'
EMAIL_HOST_PASSWORD = 'njxgtgtiisiuabfc'

import os
from dotenv import load_dotenv

load_dotenv()  # Load environment variables from .env

# Ensure SECRET_KEY is fetched from .env and raise an error if missing
import os
SECRET_KEY = os.getenv("SECRET_KEY", "%+dyy-f83w7tzf(3nms^33j1!s8_3_^44-8a^pfdb%k=(uo^k%")
if not SECRET_KEY:
    raise ValueError("Missing DJANGO_SECRET_KEY in .env file")

# Convert ALLOWED_HOSTS to a list
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')

# Read DEBUG from .env and convert to boolean
DEBUG = os.getenv('DEBUG', 'False').lower() == 'true'

